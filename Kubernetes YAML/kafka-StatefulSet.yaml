kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: kafka-1
  namespace: default
spec:
  serviceName: kafka1
  replicas: 3
  template:
    metadata:
      name: kafka-1
      labels:
        app: kafka-1
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka:2.12-2.3.0
        ports:
        - containerPort: 9092
        - containerPort: 9093
        env:
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_PORT
          value: "9092"
        - name: KAFKA_LISTENERS
          value: INSIDE://:9093,OUTSIDE://:9092
        - name: KAFKA_ADVERTISED_LISTENERS
          value: INSIDE://:9093,OUTSIDE://:9092
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: INSIDE
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"            
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zk-cs:2181
        - name: KAFKA_CREATE_TOPICS
          value: "test-topics:3:2:compact"
        - name: KAFKA_LOG_DIRS
          value: /kafka/kafka-logs
        - name: KAFKA_JMX_PORT
          value: "5555"
        - name: KAFKA_CLEANUP_POLICY
          value: "compact"
        volumeMounts:
        - name: kafka1
          mountPath: /data/zoo/
  volumeClaimTemplates:
  - metadata:
      name: kafka1
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "700M" 
---
apiVersion: v1
kind: Service
metadata:
  name: kafka1
  namespace: default
  labels:
    app: kafka-1
spec:
  ports:
  - port: 9092
    targetPort: 9092
    protocol: TCP
  selector:
    app: kafka-1
  type: NodePort
